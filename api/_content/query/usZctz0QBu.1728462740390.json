{"_path":"/web-dev/cheatsheet","_dir":"web-dev","_draft":false,"_partial":false,"_locale":"","title":"Cheatsheet","description":"","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"testing"},"children":[{"type":"text","value":"Testing"}]},{"type":"element","tag":"card-grid","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:root":""},"children":[{"type":"element","tag":"ellipsis","props":{"blur":"140px","left":"0px","top":"10rem","width":"40rem"},"children":[]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"test"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unit testing: Validate the behavior of function, classes, components, methods (Given an input, check if the output is expected)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Integration testing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"End to end testing: Run your app in a simulated environment: Cypress"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"acceptance testing: tests that ensure the software meets all the clients requirement"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"system testing: Tests that work on required hardware/servers"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"smoke testing: Most important tests first before the rest of the suit"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stress testing: capability of infrastructure"}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Test driven development"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Have a pipeline that run the tests before making the commit"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write tests before start coding"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Refactor -> Fail -> Pass -> Refactor (till all pass)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"tool: jest"}]}]},{"type":"element","tag":"h5","props":{"id":"integration-testing"},"children":[{"type":"text","value":"Integration testing"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Testing multiple units of code together."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Not just input and output. See if a function has been called the right way, as many time as needed with the correct parameters, the component has been mounted and so on"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ex: Component that takes data from a hook. Check if it displayed properly in the component"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ex: API getters that integrates with the application. Proper errors are integrated, proper result display and so on."}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Jest"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://jestjs.io/docs/mock-function-api","rel":["nofollow"]},"children":[{"type":"text","value":"Mock functions"}]},{"type":"text","value":": function that you can pass as a callback to test other function. You can watch details about the callback. How many time it was run and what parameters where passed into it.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"you can acces the watch method intel with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".mock"}]},{"type":"text","value":" attribute ex "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"mockFn.mock.calls"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"mockFn.mock.results"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"spyOn"}]},{"type":"text","value":" to also track the methods"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Setup and Teardown: You can set prepearment methods: what will happen before/after testing, for everything or just scoped"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Jest Object: Automatically in scope in every test file. Provides the functionality, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"test"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"it"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"describe"}]},{"type":"text","value":", etc."}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"data-storage-and-manipulation"},"children":[{"type":"text","value":"Data storage and manipulation"}]},{"type":"element","tag":"card-grid","props":{},"children":[{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Glossary/REST","rel":["nofollow"]},"children":[{"type":"text","value":"Rest"}]}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Rest: A web arhitecture that is based on client sending a request and getting a response.Methods:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET","rel":["nofollow"]},"children":[{"type":"text","value":"GET"}]},{"type":"text","value":" retrieve data from server"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST","rel":["nofollow"]},"children":[{"type":"text","value":"POST"}]},{"type":"text","value":" cause a change"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT","rel":["nofollow"]},"children":[{"type":"text","value":"PUT"}]},{"type":"text","value":" replace all the target with the payload"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH","rel":["nofollow"]},"children":[{"type":"text","value":"PATCH"}]},{"type":"text","value":" apply partial modification"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE","rel":["nofollow"]},"children":[{"type":"text","value":"DELETE"}]},{"type":"text","value":" deletes the specific resource"}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Browser user data storage & database"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage","rel":["nofollow"]},"children":[{"type":"text","value":"sessionStorage"}]},{"type":"text","value":" ends when browser session ends"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage","rel":["nofollow"]},"children":[{"type":"text","value":"localStorage"}]},{"type":"text","value":" no expiration time"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies","rel":["nofollow"]},"children":[{"type":"text","value":"cookies"}]},{"type":"text","value":" Any data about user that is stored in a session level (server side)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Crud: all ways that you can operate a store data (used in databases): create, read, update, delete"}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.getvero.com/resources/webhooks/","rel":["nofollow"]},"children":[{"type":"text","value":"Webhook"}]}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=Mfzucn4f9Xk","rel":["nofollow"]},"children":[{"type":"text","value":"video reference"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"your frontend uses a third party webhook service provider + the webhookEndpoint\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"by accessing it's frontend"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"by sending it a request for a service"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"the third webhook provider party executes the action then sends a payload (usually a 200) to the sended webhookEndpoint (your backend)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"your backend notify your frontend that action is completed (most prob with a SSE / sockets)"}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Server-Sent Events (SSE)"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events","rel":["nofollow"]},"children":[{"type":"text","value":"Server-Sent Events (SSE)"}]},{"type":"text","value":" is a web technology that pushes text event to the browser"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unidirectional communication: SSE allows the server to push data to the client (web browser) without the need for the client to make additional requests."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uses EventSource to declear the listened link"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Automatic reconnection"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Event-driven: Data sent through SSE is organized into named events"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Text-based data transmission (including objects)"}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"WebRTC (Web Real-Time Communication):"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Powerful set of APIs that enable real-time communication directly between web browsers without the need for plugins or intermediary servers. WebRTC is primarily used for peer-to-peer audio, video, and data sharing applications."}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API","rel":["nofollow"]},"children":[{"type":"text","value":"WebSockets"}]}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Protocol: WebSocket operates over a single, full-duplex TCP connection."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bidirectional Communication: Allows data to be sent and received simultaneously between client and server."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Real-time Updates: Ideal for applications requiring live updates and instant communication."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Efficiency: Reduces overhead by maintaining a persistent connection."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"inspect them in networking by checking ws"}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GraphQl"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Query language for APIs, Client's query for certain data, returns requested data in a JSON-like format"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Allows clients to request specific data they need"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Defined by a schema describing data types, fields, and relationships"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Single endpoint for querying"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Hierarchical queries mirror data structure"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Supports mutations for creating, updating, or deleting data"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Subscriptions for real-time updates"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optimizing data fetching in complex applications"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Simplifies API interactions with a single endpoint"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Type safety and validation of queries"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"optimization-core-web-vitals"},"children":[{"type":"text","value":"Optimization & Core web vitals"}]},{"type":"element","tag":"card-grid","props":{},"children":[{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Optimization tools"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=0fONene3OIA","rel":["nofollow"]},"children":[{"type":"text","value":"Reference"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://chromewebstore.google.com/detail/web-vitals/ahfhijdlegdabablpippeagghigmibma?pli=1","rel":["nofollow"]},"children":[{"type":"text","value":"web vitals"}]},{"type":"text","value":" made by google, hover over elements that need optimization, display measurements"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.chrome.com/docs/lighthouse/overview/","rel":["nofollow"]},"children":[{"type":"text","value":"lighthouse"}]},{"type":"text","value":" (integrated with devtools)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://unlighthouse.dev/","rel":["nofollow"]},"children":[{"type":"text","value":"unlighthouse"}]},{"type":"text","value":" - lighthouse report for each page (has an stk, can be integrated into the pipeline)"}]}]},{"type":"element","tag":"h5","props":{"id":"fid-first-input-delay"},"children":[{"type":"text","value":"FID (First Input Delay)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The ammount of time the user interacts with the page (click button, process events)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Good 100ms < needs improvement 300ms < bad"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reduce javascript execution time"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"use lazy loading"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"measure with web vitals plugin"}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"LCP (Largest contentful paint)"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"loading performance: text -> css -> images & videos."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Good 2.5 sec < Needs improvement 4.0 < poor (impact on search engine optimization)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"analyze open network -> analyze waterfall"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reduce the resource load time (compress img use modern formats and fonts)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"serves assets from CDN (content delivery network) server nearby good"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"blocking js (don't run js before loading the image), SSR > SPA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"preload (modenr browser)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"img fetchPriority (high/low) html tag"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"preload attribute in link"}]}]}]}]}]}]},{"type":"element","tag":"card","props":{},"children":[{"type":"element","tag":"template","props":{"v-slot:title":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CLS (Comulative Layout Shift)"}]}]},{"type":"element","tag":"template","props":{"v-slot:description":""},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Visual stability. All things load at once or pretty close to each other. No random renders apears on screen"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"good 0.1 < needs improvement 0.25 < bad"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"generate lighthouse report in dev tools"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"web vitals extension"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"don't use img without width / height tags or aspect-ratio: 4/9;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"srcset tag different img different containers"}]}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"testing","depth":2,"text":"Testing"},{"id":"data-storage-and-manipulation","depth":2,"text":"Data storage and manipulation"},{"id":"optimization-core-web-vitals","depth":2,"text":"Optimization & Core web vitals"}]}},"_type":"markdown","_id":"content:3.Web dev:2.Cheatsheet.md","_source":"content","_file":"3.Web dev/2.Cheatsheet.md","_stem":"3.Web dev/2.Cheatsheet","_extension":"md"}